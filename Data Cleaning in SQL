--STARTING WITH CUSTOMERS, CHECK NULL VALUES
SELECT * FROM CUSTOMERS
WHERE gender IS NULL
--2175 rows where gender is null

SELECT * FROM CUSTOMERS
WHERE income IS NULL
--2175 rows where income is null

SELECT * FROM CUSTOMERS
WHERE AGE>100
--WE HAVE 2180 VALUES WHERE AGE IS >100

SELECT * FROM CUSTOMERS
	WHERE AGE>100 AND
	GENDER IS NOT NULL AND
	INCOME IS NOT NULL
--5 OF THESE VALUES HAVE GENDER AND INCOME DATA, SO THEY ARE VALID

--LETS CHECK FOR DUPLICATES
WITH CTE_CLEAN1 AS (
SELECT * FROM CUSTOMERS
	WHERE GENDER IS NOT NULL AND INCOME IS NOT NULL),
	CTE_DUPCHECK AS(
SELECT *, 
	ROW_NUMBER() OVER (PARTITION BY customer_id, became_member_on, gender, age, income ORDER BY became_member_on) AS DPU
from CTE_CLEAN1)

SELECT * FROM CTE_DUPCHECK
WHERE DPU>1
--WE DON'T HAVE ANY DUPLICATES IN CUSTOMERS

--MOVING ON INTO EVENTS TABLE
SELECT * FROM EVENTS
WHERE time IS NULL
--THIS DATA HAS NO NULL VALUES

--CHECKING FOR DUPLICATES
WITH CTE_DUP AS (
SELECT *, 
	ROW_NUMBER() OVER (PARTITION BY customer_id, event, value, time ORDER BY time) as DPU
FROM EVENTS)

SELECT * FROM CTE_DUP
WHERE DPU>1
--THERE IS A POSSIBILITY OF A CUSTOMER GETTING SAME EVENT, VALUE AND TIME, SO WE'RE GONNA KEEP DUPLICATES

--LETS CREATE A TEMP TABLE GETTING CUSTOMER AND EVENT TABLES TOGETHER
SELECT C.*,
	E.event,E.time,E.value
	INTO #CLEAN_CAFE
FROM CUSTOMERS C
	LEFT JOIN EVENTS E ON C.customer_id=E.customer_id
	WHERE C.GENDER IS NOT NULL AND INCOME IS NOT NULL

--TO JOIN OUR DATA TOGETHER FOR ANALYSIS, WE NEED TO UPDATE EVENTS.VALUE TO MATCH OFFERS.OFFER_ID
--FIRST WE CREATE A TEMP TABLE CALLED TRIMTEST TO FIND OUT THE BEST WAY TO EXTRACT STRINGS WITHOUT TOUCHING THE ORIGINAL DATA
SELECT EVENT,VALUE INTO #TRIMTEST
FROM #CLEAN_CAFE

SELECT LEN(VALUE) FROM #TRIMTEST

SELECT EVENT, 
	SUBSTRING(VALUE,15,32) 
FROM #CLEAN_CAFE
WHERE EVENT IN 
	('offer received', 'offer viewed', 'offer completed')
--WE USED SUBSTRING TO GET OUR ID BETWEEN THE 15TH AND 32ND CHARACTERS

--AFTER THAT WE UPDATED OUR TABLE ACCORDINGLY
UPDATE #TRIMTEST
SET value=SUBSTRING(VALUE,15,32)
WHERE EVENT='offer received'

UPDATE #TRIMTEST
SET value=SUBSTRING(VALUE,15,32)
WHERE EVENT='offer viewed'

UPDATE #TRIMTEST
SET value=SUBSTRING(VALUE,15,32)
WHERE EVENT='offer completed'

--WITH THIS UPDATED TRIMTEST, WE TESTED IF OUR OFFER IDS' MATCH WITH THE ORIGINAL ONE
select T.*, 
O.offer_id, O.offer_type 
from #TRIMTEST T
LEFT JOIN OFFERS O ON T.VALUE=O.offer_id

--WE GOT A MATCH, NOW WE HAVE TO UPDATE OUR ORIGINAL TEMP TABLE
UPDATE #CLEAN_CAFE
SET VALUE=SUBSTRING(VALUE,15,32)
WHERE EVENT IN ('offer received', 'offer viewed', 'offer completed')

--LET'S EXTRACT THE TRANSACTION AMOUNTS OUT OF THE VALUE COLUMN 
--FIRST WE CREATE #VALUES TEMP TABLE TO TRY AND FIND OUT HOW WE CAN DO THAT
SELECT * INTO #VALUES
FROM #CLEAN_CAFE
WHERE EVENT='transaction'

SELECT 
	SUBSTRING(value, CHARINDEX(':', value)+2, LEN(value)-CHARINDEX(':', value)-2) as extracted
	from #VALUES

UPDATE #VALUES
SET value=SUBSTRING(value, CHARINDEX(':', value)+2, LEN(value)-CHARINDEX(':', value)-2) 

--OUR CODE WORKS, NOW LETS UPDATE THE ORIGINAL TEMP TABLE
UPDATE #CLEAN_CAFE
SET value=SUBSTRING(value, CHARINDEX(':', value)+2, LEN(value)-CHARINDEX(':', value)-2)
WHERE EVENT='transaction'
